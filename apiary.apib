FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Team Finder

Team Finder is an API exposing REST end points to manage an Internal Job Portal

## Jobs [/jobs/{perpage}/{pageno}]

### List All Jobs [GET]

End point to fetch all the jobs listed so far

+ Parameters
    + perpage - Number of items per page
    + pageno - Page to retrieve

+ Response 200 (application/json)

        [{"jId":1,"team":{"id":1,"teamName":"Insta"},"category":
        {"categoryName":"Developer","cid":1},"postedBy":{"emailId":"sai.chandra@practo.com","eid":1},"recruitId":null,"description":"Need a developer","closed":false}]


### Create a new Job [POST]

End point to create a new job listing. Category Id, Admin Id and description for the job are expected

+ Request (application/json)

        {"categoryId":1,"postedBy":1,"description":"Another job","teamId":1}

+ Response 201 (application/json)

    + Body

            {
            "jId": 7,
            "category": {
            "categoryName": "Developer",
            "cid": 1
            },"team":{"id":1,"teamName":"Insta"},
            "postedBy": {
            "emailId": "sai.chandra@practo.com",
            "eid": 1
            },
            "recruitId": null,
            "description": "Experienced Developer in Java",
            "closed": false
            }
            
## Jobs [/jobs/{jobId}]            

### Update a Job listing [PATCH]

End point to update an existing Job listing

+ Parameters
    + jobId - id of a Job listing

+ Request (application/json)

        {"categoryId":1,"description":"Need a developer","recruitId"=2,"teamId":1}

+ Response 201 (application/json)
            

    + Body

            {
            "jId": 4,
            "category": {
            "categoryName": "Technical Lead",
            "cid": 1
            },"team":{"id":1,"teamName":"Insta"},
            "postedBy": {
                "emailId": "sai.chandra@practo.com",
            "eid": 1
            },
            "recruitId": {
            "emailId": "chandu9013@gmail.com",
            "eid": 2
            },
            "description": "Need an experienced candidate",
            "closed": true
            }
            
### Deleting a Job listing [DELETE]

End point to update an existing Job listing

+ Parameters
    + jobId - id of a Job listing
    
+ Response 200 
           
            
## Job Applications [/jobs/{jobId}/applications]
            
### List All Job Applications [GET]

End point that lists all the applications received for a job so far.

+ Parameters
    + jobId - id of a Job listing

+ Response 200 (application/json)

        [{"jAppId":1,"employee":{
            "emailId": "chandu9013@gmail.com",
            "eid": 2
            },"job":{"jId": 4,
            "category": {
            "categoryName": "Technical Lead",
            "cid": 1
            },"team":{"id":1,"teamName":"Insta"},
            "postedBy": {
                "emailId": "sai.chandra@practo.com",
            "eid": 1
            },
            "recruitId": {
            "emailId": "chandu9013@gmail.com",
            "eid": 2
            },
            "description": "Need an experienced candidate",
            "closed": true
            }]
        
### New Job application [POST]    
End point to add a new job application

+ Parameters
    + jobId - id of a Job listing

+ Response 201 (application/json)

        {"jAppId":1,"employee":{
            "emailId": "chandu9013@gmail.com",
            "eid": 2
            }}
            
    
            
## Job Application [/applications/{appId}]            
            
### Delete Job application [DELETE]    
End point to delete an existing job application

+ Parameters
    + appId - applicationId

+ Response 200
            
## Categories [/categories]

### Get all Job Categories [GET]    
End point to fetch all the Job categories

+ Response 200 (application/json)

        [{"categoryName":"Technical Lead","cid":4},{"categoryName":"QA","cid":3}]
        
## Teams [/teams]

### Get all Teams [GET]    
End point to fetch all the Teams

+ Response 200 (application/json)

        [{"teamName":"Insta","id":4},{"teamName":"Querent","id":3}]
        
## Authentication [/user]

### Get User details [GET]
End point that verifies if a user is logged in via OAuth2 Provider (Google) and provides necessary details back in the response.
+ Response 200 (application/json)

        {"name":"Sai Chandra Sekhar D","picUrl":"http://example.com/pic","emailId":"sai.chandra@practo.com","role":{"id":1,"name":"Admin"}}