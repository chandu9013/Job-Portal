package com.practo.sai.jobportal.entities;
// Generated Oct 17, 2016 1:36:19 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.Where;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "job_portal", uniqueConstraints = @UniqueConstraint(columnNames = "email_id"))
@SQLDelete(sql = "UPDATE employee SET deleted = '1' WHERE e_id = ?")
// Filter added to retrieve only records that have not been soft deleted.
@Where(clause = "deleted <> '1'")
public class Employee implements java.io.Serializable {

	private Integer EId;
	private String emailId;
	private char deleted;
	private String name;
	// private Set<JobApplication> jobApplications = new
	// HashSet<JobApplication>(0);
	// private Set<UserRole> userRoles = new HashSet<UserRole>(0);
	// private Set<Job> jobsForPostedBy = new HashSet<Job>(0);
	// private Set<Job> jobsForRecruitId = new HashSet<Job>(0);

	public char getDeleted() {
		return deleted;
	}

	public void setDeleted(char deleted) {
		this.deleted = deleted;
	}

	public Employee() {
	}

	public Employee(String emailId) {
		this.emailId = emailId;
	}

	// public Employee(String emailId, Set<JobApplication> jobApplications,
	// Set<UserRole> userRoles,
	// Set<Job> jobsForPostedBy, Set<Job> jobsForRecruitId) {
	// this.emailId = emailId;
	// this.jobApplications = jobApplications;
	// this.userRoles = userRoles;
	// this.jobsForPostedBy = jobsForPostedBy;
	// this.jobsForRecruitId = jobsForRecruitId;
	// }

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "e_id", unique = true, nullable = false)
	public Integer getEId() {
		return this.EId;
	}

	public void setEId(Integer EId) {
		this.EId = EId;
	}

	@Column(name = "email_id", unique = true, nullable = false)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	// @OneToMany(fetch = FetchType.EAGER, mappedBy = "employee")
	// public Set<JobApplication> getJobApplications() {
	// return this.jobApplications;
	// }
	//
	// public void setJobApplications(Set<JobApplication> jobApplications) {
	// this.jobApplications = jobApplications;
	// }

	// //@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee")
	// public Set<UserRole> getUserRoles() {
	// return this.userRoles;
	// }
	//
	// public void setUserRoles(Set<UserRole> userRoles) {
	// this.userRoles = userRoles;
	// }

	// @OneToMany(fetch = FetchType.EAGER, mappedBy = "employeeByPostedBy")
	// public Set<Job> getJobsForPostedBy() {
	// return this.jobsForPostedBy;
	// }
	//
	// public void setJobsForPostedBy(Set<Job> jobsForPostedBy) {
	// this.jobsForPostedBy = jobsForPostedBy;
	// }
	//
	// //@OneToMany(fetch = FetchType.EAGER, mappedBy = "employeeByRecruitId")
	// public Set<Job> getJobsForRecruitId() {
	// return this.jobsForRecruitId;
	// }
	//
	// public void setJobsForRecruitId(Set<Job> jobsForRecruitId) {
	// this.jobsForRecruitId = jobsForRecruitId;
	// }

}
